name: ReportUnitTest

on:
  workflow_dispatch:

  # cron: https://crontab.guru/
  # 이 크론은 매주 월요일 한국 시간 9시 30분(AM)에 실행됩니다.
  schedule:
    - cron: 30 0 * * 1

jobs:
  GetReport:
    permissions:
      contents: write
      checks: write
      pull-requests: write
      repository-projects: write
      packages: read

    strategy:
      matrix:
        repo:
          - {
              repository: "ggqcompany/back-node-master-auth-server",
              path: "auth",
            }
          - {
              repository: "ggqcompany/back-node-master-admin-server",
              path: "admin",
            }
          - {
              repository: "ggqcompany/back-node-master-bot-server",
              path: "bot",
            }
          - {
              repository: "ggqcompany/back-node-master-data-center-server",
              path: "data-center",
            }
          - {
              repository: "ggqcompany/back-node-master-gateway-server",
              path: "gateway",
            }
          - {
              repository: "ggqcompany/back-node-master-lcu-server",
              path: "lcu",
            }
          - {
              repository: "ggqcompany/back-node-master-metadata-server",
              path: "metadata",
            }
          - {
              repository: "ggqcompany/back-node-master-statistics-server",
              path: "statistics",
            }
          - {
              repository: "ggqcompany/back-node-intelligence-application-server",
              path: "intelligence-application",
            }
          - {
              repository: "ggqcompany/back-node-intelligence-reference-collector-server",
              path: "intelligence-reference-collector",
            }
          - {
              repository: "ggqcompany/back-node-desktop-application-server",
              path: "desktop-application",
            }

    uses: ./.github/workflows/CreateUnitTestReport.yml
    with:
      repository: ${{ matrix.repo.repository }}
      path: ${{ matrix.repo.path }}
    secrets:
      git_token: ${{ secrets.GIT_TOKEN }}

  ReportUnitTest:
    # npm registry 수정되면 self-hosted로 변경
    runs-on: ubuntu-latest
    needs: [GetReport]
    if: always()
    steps:
      - name: Download coverage reports
        uses: actions/download-artifact@v2
        with:
          path: ./coverage_reports

      - name: Combine coverage reports
        run: |
          echo "# Unit Test Coverage Report" > combined_coverage.md
          echo "" >> combined_coverage.md
          for report_dir in ./coverage_reports/*/; do
            echo "report_dir = $report_dir"
            
            cat "${report_dir}coverage.md" >> combined_coverage.md
            echo "" >> combined_coverage.md
          done

      - name: Convert to html
        uses: jaywcjlove/markdown-to-html-cli@main
        id: coverage_html
        with:
          source: combined_coverage.md
          output: coverage.html

      - uses: dawidd6/action-send-mail@v3
        with:
          server_address: email-smtp.ap-northeast-2.amazonaws.com
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional (recommended): mail server username:
          username: ${{ secrets.MAIL_USERNAME }}
          # Optional (recommended) mail server password:
          password: ${{ secrets.MAIL_PASSWORD }}
          # Required mail subject:
          subject: Unit Test Coverage Report
          # Required recipients' addresses:
          to: ${{ secrets.NOTIFY_EMAIL_LIST }}
          # Required sender full name (address can be skipped):
          from: GGQ DEV <dev@ggq.gg> # <user@example.com>
          # Optional body:
          html_body: ${{ steps.coverage_html.outputs.html }}

      - name: Install jq
        run: sudo apt-get install jq

      - name: List artifacts
        id: list_artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          artifacts=$(curl -s -X GET -H "Authorization: token ${{ env.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/artifacts")
          artifact_ids=$(echo "$artifacts" | jq '.artifacts | .[].id' | tr '\n' ' ')
          echo "artifact_ids=$artifact_ids" >> $GITHUB_ENV

      - name: Delete artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          for artifact_id in ${{ env.artifact_ids }}; do
            curl -s -X DELETE -H "Authorization: token ${{ env.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$artifact_id"
          done
